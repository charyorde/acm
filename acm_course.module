<?php
/*
 *
 *  hook_menu()
 */
function acm_course_menu() {
	$items = array();
	$items['student/course_entity'] = array(
		'title' => 'Course Entity',
		'page callback' => 'acm_course_formget',
		'access arguments' => array('administer acm_course'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['student/course/list'] = array(
		'title' => 'Course manage list',
		'page callback' => 'course_list', 
		'access arguments' => array('administer acm_course'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'acm_course.view.list.inc',
	);
	$items['student/course/%/view'] = array(
		'title' => 'Course manage list',
		'page callback' => 'viewsdata',
		'page arguments' => array(2),
		'access arguments' => array('administer acm_course'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'acm_course.view.list.inc',
	);
	$items['student/course/update'] = array(
		'title' => 'Course manage list',
		'page callback' => 'acm_course_update',
		'access arguments' => array('administer acm_course'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'includes/acm_course.view.list.inc'
	);
	return $items;
}
function acm_course_perm() {
	return array('administer acm_course');
}
function acm_course_init() {
	drupal_add_css(drupal_get_path('module', 'acm_course') . '/css/acm_course.css');
	drupal_add_js(drupal_get_path('module', 'acm_course') . '/js/acm_course.js'); 

}
function acm_course_formget(){
	return drupal_get_form('acm_course_form');
}
/*
 *
 * hook form()
 */
function acm_course_form($form_id) {
	$student_lists=get_user_list('student');
	$student_options = array();
	$student_options[] = 'Select Student';
	foreach($student_lists as $student_list){
		$student_options[$student_list->uid] = $student_list->name;
	}
	$form['uid'] = array(
		'#title' => t('Student'),
		'#type' => 'select',
		'#options' => $student_options,
		'#required' => TRUE,
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>' ,     
	);
	$course_lists = get_course_list('course_content');
	$course_options = array();
	$course_options[] = 'Select Course'; 
	foreach($course_lists as $course_list){
		$course_options[$course_list->nid] = $course_list->title;
	}
	$form['course'] = array(
		'#title' => t('Course'),
		'#type' => 'select',
		'#options' => $course_options,
		'#required' => TRUE,
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>' ,     
	);
	$form['exam_score'] = array(
		'#title' => t('Exam Score'),
		'#type' => 'textfield', 
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['test_score'] = array(
		'#title' => t('Test Score'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>' ,     
	);
	$form['matriculationnumber'] = array(
		'#title' => t('Matriculation number'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['currentgpa'] = array(
		'#title' => t('Current GPA'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['totalscore'] = array(
		'#title' => t('Total Score'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['grade'] = array(
		'#title' => t('Grade'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['gradepoint'] = array(
		'#title' => t('Grade Point'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['dropped'] = array(
		'#title' => t('Dropped'),
		'#type' => 'checkbox',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['creditload'] = array(
		'#title' => t('Credit Load'),
		'#type' => 'textfield',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['approved'] = array(
		'#title' => t('Approved'),
		'#type' => 'checkbox',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	global $user;
	$form['submittedby'] = array(
		'#title' => t('Submitted by'),
		'#type' => 'hidden',
		'#default_value' => $user->name,
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['submitted'] = array(
		'#title' => t('Submitted for approval'),
		'#type' => 'checkbox',
		'#prefix' => '<div class="require-data">',
		'#suffix' => '</div>',     
	);
	$form['submit'] = array(
		'#value' => 'Submit',
		'#type' => 'submit',
		'#submit' => array('acm_course_form_submit'),
		'#prefix' => '<div class="member_submit" >',
		'#suffix' => '</div>',
	);
	return $form;
}

function acm_course_form_validate($form, &$form_state){
	if(empty($form_state['values']['uid'])){
		form_set_error('uid',t('Please select student'));
	}
	if(empty($form_state['values']['course'])){
		form_set_error('course',t('Please select course'));
	}
}
function acm_course_form_submit($form, &$form_state){
  $values = $form_state['values'];
  $course_table = 'acm_course';
  $course_id = db_last_insert_id($course_table, 'id');
	$success = drupal_write_record('acm_course',$values);
  if($success) {
    // TODO: Add new course_content node(s). Contents to add are Course Introduction, Course materials, course references
    // Instead of below code, create Course Introduction, COurse Materials and Course references using drupal batch process. Invoke acm_school_create_batch_course_content here
    module_load_include('inc', 'node', 'node.pages');
    $node = array('type' => 'course_content');
    $node_form_state = array();
    $node_form_state['values']['title'] = t('Course Introduction');
    $node_form_state['values']['field_course_ref_id'][0]['value'] = $course_id;
    $node_form_state['values']['op'] = t('Save');
    drupal_execute('course_content_node_form', $node_form_state, (object)$node);
    $nid = $node_form_state['nid'];
    $node = node_load($nid);
    $node->uid = 1;
    node_save($node);
	  drupal_goto('student/course/list');
  } else {
    drupal_set_message("Something dangerous happened! Couldn't save new Course", 'error');
  }
}
//Get courses list
function get_course_list($type, $limit=20, $offset=0) {
	$nodes = array();
	$query = db_rewrite_sql("SELECT nid FROM {node} n WHERE type = '%s'", 'n');
	$results = db_query_range($query,$type,$offset,$limit);
	while($nid = db_result($results)) {
		$nodes[] = node_load($nid);
	}
	return $nodes;
}
//Get users list
function get_user_list($role, $limit=20, $offset=0) {
	$query = db_rewrite_sql("SELECT u.uid, u.name FROM users u,role r, users_roles ur WHERE r.name='%s' AND r.rid=ur.rid AND ur.uid=u.uid",'u');
	$results= db_query_range($query,$role,$offset,$limit);
	while ($result = db_fetch_object($results)) {
		$users[]=$result;
	}
  return $users;
}



